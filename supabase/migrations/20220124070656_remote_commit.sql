-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public.todos
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id uuid NOT NULL,
    task text COLLATE pg_catalog."default",
    is_complete boolean DEFAULT false,
    inserted_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
    CONSTRAINT todos_pkey PRIMARY KEY (id),
    CONSTRAINT todos_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT todos_task_check CHECK (char_length(task) > 3)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.todos
    OWNER to supabase_admin;

ALTER TABLE IF EXISTS public.todos
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.todos TO anon;

GRANT ALL ON TABLE public.todos TO authenticated;

GRANT ALL ON TABLE public.todos TO postgres;

GRANT ALL ON TABLE public.todos TO service_role;

GRANT ALL ON TABLE public.todos TO supabase_admin;
CREATE POLICY "Individuals can create todos."
    ON public.todos
    AS PERMISSIVE
    FOR INSERT
    TO public
    WITH CHECK ((auth.uid() = user_id));
CREATE POLICY "Individuals can delete their own todos."
    ON public.todos
    AS PERMISSIVE
    FOR DELETE
    TO public
    USING ((auth.uid() = user_id));
CREATE POLICY "Individuals can update their own todos."
    ON public.todos
    AS PERMISSIVE
    FOR UPDATE
    TO public
    USING ((auth.uid() = user_id));
CREATE POLICY "Individuals can view their own todos. "
    ON public.todos
    AS PERMISSIVE
    FOR SELECT
    TO public
    USING ((auth.uid() = user_id));
